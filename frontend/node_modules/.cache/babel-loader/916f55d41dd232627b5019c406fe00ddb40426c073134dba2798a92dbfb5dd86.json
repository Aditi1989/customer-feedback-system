{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\APPS DESK\\\\MINI PROJECT\\\\customer-feedback-system\\\\frontend\\\\src\\\\context\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({\n  theme: 'light',\n  toggleTheme: () => {}\n});\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => setTheme(theme === 'light' ? 'dark' : 'light');\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ThemeContext","theme","toggleTheme","ThemeProvider","children","_s","setTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/APPS DESK/MINI PROJECT/customer-feedback-system/frontend/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst ThemeContext = createContext({ theme: 'light', toggleTheme: () => {} });\r\n\r\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [theme, setTheme] = useState('light');\r\n  const toggleTheme = () => setTheme(theme === 'light' ? 'dark' : 'light');\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC;EAAEM,KAAK,EAAE,OAAO;EAAEC,WAAW,EAAEA,CAAA,KAAM,CAAC;AAAE,CAAC,CAAC;AAE7E,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAMK,WAAW,GAAGA,CAAA,KAAMI,QAAQ,CAACL,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAExE,oBACEF,OAAA,CAACC,YAAY,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEP,KAAK;MAAEC;IAAY,CAAE;IAAAE,QAAA,EAClDA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACP,EAAA,CATWF,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAW1B,OAAO,MAAMW,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnB,UAAU,CAACI,YAAY,CAAC;AAAA;AAACe,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}